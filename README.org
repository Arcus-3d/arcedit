* arcedit
A fast 3D Gcode Viewer/Editor for visualization of multi-material, weighted mixing, fused filament fabrication.

#+CAPTION: CD4046B Block Diagramm
#+NAME:   fig:cd4046
#+name: fig:cd4046
[[./images/arcedit.png]]

* Overview

This was created to speed up adding the codes needed for controlling active mixing filament printers, mainly... mine.  
Support for multi-material 3D printing is still young, and currently support for mixed/full color filament printing is basically non-existant.
This method gets around that for the time being as we'll never have weighted material support in a slicer until we are using it in 3d printers.

Adapted from the very hackable: https://github.com/jonathanwin/yagv

* Features:

  * Fast, easy to use, 3D interface
  * Parsing and display of weighted material mixing M163 codes
  * Layer by layer/line by line stepping and playback of gcode.
  * Syncs the currently rendered gcode to an interactive gvim window for editing.
  * Supports Machinekit velocity extrusion. There is no E.


* Requires:

  * python 2.x (2.7.3 tested)
    http://python.org/
  * pyglet 1.1+ (1.1.4 tested)
    http://www.pyglet.org
  * vimrunner 1.0.3
    sudo pip install vimrunner
  * gvim 7.4 with +clientserver enabled at compile time
    vim --version to check compile time options

* Usage:
  
  * Edit config.cfg and setup your filament color RGB values for display.
  * Generate gcode using the velocity extrusion patched version of Slic3r for Machinekit.  Add at least one 'filament weight' code to the start of your gcode during slicing.  Example: 'M163 S1 P100 ; filament 1 at 100% weight'
  * Execute: arcedit [file.gcode]
  * Use arcedit to locate a suitable point to alter the filament mix ratio.
    * Press Up/Down or middle mouse + drage to switch layers.
    * Press N and P go to next/previous rapid location (usually to a new area)
    * Use Left/Right to go forward/backward in time for extrusion.  Hold Control to go faster.
    * Where you want to start a new color, press C to insert a new blank color code and edit it. ( or pre-define color codes in config.cfg -> shortcuts )
  * Press R to save and reload.  The resulting material/color changes are displayed in the interface.  If possible, the current location is maintained. 
    Repeat the last 2 steps for each area you want to change, per layer.


* Issues:
  * It's still a manual process.
  * You have to reload the file after every change to see it. There is a better way...
  * Panning not yet implemented.
  * I designed this using Slic3r output.  Other slicing programs may not work.
  * Sometimes I get 'Bus errors'.  This is what happens when I loose sync with the gvim process.  Restarting arcedit works, and you don't loose anything.
  * Processor usage is higher than it needs to be.
  * Many gcodes unsupported, in particular:
    - G20: Set Units to Inches (usage unknown)
    - Arcs (G2 & G3 ?)
